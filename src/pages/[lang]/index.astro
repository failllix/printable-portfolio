---
import CommonWrapper from "../../layouts/CommonWrapper.astro";
import WorkExperience from "../../components/WorkExperience.astro";
import Education from "../../components/Education.astro";
import Paragraph from "../../components/Paragraph.astro";
import Link from "../../components/Link.astro";
import Heading1 from "../../components/Heading1.astro";
import Heading2 from "../../components/Heading2.astro";
import Section from "../../components/Section.astro";
import Skill from "../../components/Skill.astro";
import Certification from "../../components/Certification.astro";
import ProjectCard from "../../components/ProjectCard.astro";
import BulletList from "../../components/BulletList.astro";
import PrintEntry from "../../components/PrintEntry.astro";

import profileImage from "../../images/profile.jpg";

import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { languages } from '../../i18n/ui';

import { useTranslations } from '../../i18n/utils';

export async function getStaticPaths() {
  return Object.keys(languages).map((languageSlug) => {
    return {
      params: { lang: languageSlug, slug: languageSlug},
      props: { lang: languageSlug },
    };
  });
}

const { lang } = Astro.props;

const t = useTranslations(lang);

const idStartsWithExpectedLanguage = ({ id }) => {
  return id.startsWith(lang);
};

const allProjectsCollection = await getCollection("projects", idStartsWithExpectedLanguage);
const allProjects = allProjectsCollection.sort(
  (a, b) => b.data.year - a.data.year
).filter(project=> project.id.startsWith(lang));
const allCertificationsCollection = await getCollection("certifications", idStartsWithExpectedLanguage);
const allCertifications = allCertificationsCollection.sort(
  (a, b) =>
    b.data.icon.charCodeAt(0) - a.data.icon.charCodeAt(0) ||
    ("" + a.data.name).localeCompare(b.data.name)
);

const allExperienceCollection = (await getCollection("experience", idStartsWithExpectedLanguage)).map((x) => x.data);

const allExperience = allExperienceCollection.sort(
  (a, b) => new Date(b.from).getTime() - new Date(a.from).getTime()
);

const allEducation = (await getCollection("education", idStartsWithExpectedLanguage)).map((x) => x.data);
const personalDetails = (await getCollection("personal", idStartsWithExpectedLanguage)).map((x) => x.data)[0];
---

<CommonWrapper
  title={personalDetails.name}
  description={`${personalDetails.name}'s resume and portfolio page`}
>
  <div class="print:hidden">
    <Section className="flex justify-between items-center">
      <div class="grow">
        <Heading1 className="mt-0">{personalDetails.name}</Heading1>
        <Paragraph>
          {personalDetails.description}
        </Paragraph>
        <Paragraph>{t('introduction.location')}{personalDetails.location}</Paragraph>
        <ul class="flex gap-2 mt-4">
          {personalDetails.links.map((link) => (
          <li>
            <Link class="italic underline"href={link.href}>{link.name}</Link>
          </li>))}
        </ul>
      </div>
      <div class="ml-4 basis-48 shrink min-w-32">
        <Image
          src={profileImage}
          alt={`${personalDetails.name} profile`}
          class="object-cover rounded-lg"
          widths={[128, 192]}
          sizes="(max-width: 550px) 128px, 192px"
          loading="eager"
        />
      </div>
    </Section>
    <Section>
      <Heading2>{t('section.summary')}</Heading2>
      <Paragraph>
        {personalDetails.summary}
      </Paragraph>
    </Section>
    <Section class="flex flex-col">
      <Heading2>{t('section.experience')}</Heading2>
      {allExperience.map(experience => (
        <WorkExperience
        title={experience.employer}
        role={experience.role}
        start={experience.from}
        end={experience.to}
      >
        <BulletList>
          {experience.bullets.map(bullet => (
            <li>{bullet}</li>
          ))}
        </BulletList>
      </WorkExperience>
      ))}
    </Section>
    <Section>
      <Heading2>{t('section.education')}</Heading2>
      {allEducation.map(education => (
        <Education
        title={education.institution}
        degree={education.degree}
        grade={education.grade}
      />
      ))}
    </Section>
    <Section>
      <Heading2>{t('section.skills')}</Heading2>
      <ul class="flex gap-4 flex-wrap">
        {personalDetails.technicalSkills.map(skill => (<Skill>{skill}</Skill>))}
      </ul>
      <ul class="mt-6 grid gap-x-2 sm:grid-cols-2 lg:grid-cols-3">
        {
          allCertifications.map(({ data }) => {
            return (
              <Certification
                name={data.name}
                link={data.link}
                icon={data.icon}
              />
            );
          })
        }
      </ul>
    </Section>
    <Section>
      {allProjects.length > 0 && <Heading2>{t('section.projects')}</Heading2>}
      <ul class="grid md:grid-cols-2 gap-4">
        {
          allProjects.map((project) => {
            return (
              <ProjectCard projectData={project.data} slug={project.slug} />
            );
          })
        }
      </ul>
    </Section>
  </div>
  <div class="hidden print:block w-full">
    <div class="mt w-20 mx-auto">
      <Image
        src={profileImage}
        alt="Felix PrÃ¼nte profile"
        class="object-cover rounded-full"
        widths={[128, 160, 192]}
        sizes="(max-width: 550px) 128px, 160px, 192px"
        loading="eager"
      />
    </div>
    <Heading1 className="font-bold text-xl text-center my-0 mt-2"
      >{personalDetails.name.toUpperCase()}</Heading1
    >
    <div class="flex items-center justify-center">
      {
        personalDetails.links.map((link) => 
            <a href={link.href} class={link.printUnderline && "underline"}>{link.printName}</a>
            <span
              class="inline-block mx-3 border-black border-2 rounded-full"
            />
        )
      }
      <span>{personalDetails.location}</span>
    </div>
    <Section compact>
      <Heading2 className="text-center" compact>{t('section.summary')}</Heading2>
      <hr class="my-1" />
      <p>
       {personalDetails.summary}
      </p>
    </Section>
    <Section compact>
      <Heading2 className="text-center" compact>{t('section.experience')}</Heading2>
      <hr class="my-1" />
      <ul class="flex flex-col gap-1">
        {
          allExperience.map((experience) => (
            <PrintEntry
              title={experience.employer}
              subtitle={experience.role}
              location={experience.location}
              dateRange={`${experience.from} - ${experience.to}`}
            >
              <BulletList>
                {experience.bullets.map((bullet) => (
                  <li>{bullet}</li>
                ))}
              </BulletList>
            </PrintEntry>
          ))
        }
      </ul>
    </Section>
    <Section compact>
      <Heading2 className="text-center" compact>{t('section.education')}</Heading2>
      <hr class="my-1" />
      <ul class="flex flex-col gap-1">
        {
          allEducation.map((education) => (
            <PrintEntry
              title={education.institution}
              subtitle={education.degree}
              location={education.location}
              dateRange={`${education.from} - ${education.to}`}
            >
              {education.bullets.map((bullet) => (
                <p>{bullet}</p>
              ))}
            </PrintEntry>
          ))
        }
      </ul>
    </Section>
    <Section compact>
      <Heading2 className="text-center" compact>{t('section.skills')}</Heading2>
      <hr class="my-1" />
      <ul>
        <li>
          <span class="font-bold">{t('skills.language')}: </span>{personalDetails.languages.join(", ")}
        </li>
        <li>
          <span class="font-bold">{t('skills.technical')}: </span>{personalDetails.technicalSkills.join(", ")}
        <li>
          <span class="font-bold">{t('skills.organisational')}: </span>{personalDetails.organizationalSkills.join(", ")}
        </li>
      </ul>
    </Section>
  </div>
</CommonWrapper>
