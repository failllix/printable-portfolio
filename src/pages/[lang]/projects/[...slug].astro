---
import CommonWrapper from "../../../layouts/CommonWrapper.astro";
import Paragraph from "../../../components/Paragraph.astro";
import BlockQuote from "../../../components/BlockQuote.astro";
import BulletList from "../../../components/BulletList.astro";
import OrderedList from "../../../components/OrderedList.astro";
import Link from "../../../components/Link.astro";
import Heading1 from "../../../components/Heading1.astro";
import Heading2 from "../../../components/Heading2.astro";
import Heading3 from "../../../components/Heading3.astro";
import CoCreators from "../../../components/CoCreators.astro";
import WorkInProgressBadge from "../../../components/WorkInProgressBadge.astro";

import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const projectEntries = await getCollection("projects");

  return projectEntries.map((project) => {
    const [lang, ...slug] = project.id.split("/");
    return {
      params: { lang, slug: slug.join("/").split(".")[0] || undefined },
      props: { project },
    };
  });
}

const { project } = Astro.props;
const { title, excerpt, year, coCreators, gitHubLink, isWorkInProgress } =
  project.data;
const { Content } = await project.render();
---

<CommonWrapper
  title={`Felix PrÃ¼nte | ${project.data.title}`}
  description={excerpt}
>
  <Heading1>{title}</Heading1>
  <hr class="my-4" />
  <div>
    {
      isWorkInProgress && (
        <div class="mt-2">
          <WorkInProgressBadge />
        </div>
      )
    }
    <Paragraph>Year: {year}</Paragraph>
    <CoCreators className="mt-2 z-20 relative" coCreators={coCreators} />
    <Link
      className={`flex items-center ${gitHubLink == undefined ? "hidden" : ""}`}
      href={gitHubLink}
    >
      <img class="w-4 h-4 mr-2" src="/github-mark.svg" />
      "{title}" on GitHub
    </Link>
  </div>
  <hr class="mt-4 mb-10" />
  <Content
    components={{
      h1: Heading1,
      h2: Heading2,
      h3: Heading3,
      a: Link,
      p: Paragraph,
      ul: BulletList,
      ol: OrderedList,
      blockquote: BlockQuote,
    }}
  />
</CommonWrapper>
